{"ast":null,"code":"const REMOVE = \"todos/REMOVE\";\nconst TOGGLE = \"todos/TOGGLE\";\nconst INSERT = \"todos/INSERT\";\nexport const remove = id => ({\n  type: REMOVE,\n  id\n});\nexport const toggle = id => ({\n  type: TOGGLE,\n  id\n});\nexport const insert = (id, text) => ({\n  type: INSERT,\n  id,\n  text\n});\nconst initialState = {\n  todos: [{\n    id: 1,\n    text: \"리액트의 기초 알아보기\",\n    checked: false\n  }, {\n    id: 2,\n    text: \"컴포넌트 스타일링 해보기\",\n    checked: false\n  }, {\n    id: 3,\n    text: \"일정 관리 앱 만들어 보기\",\n    checked: false\n  }]\n};\nfunction todosReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      };\n    case TOGGLE:\n      return {\n        ...state,\n        todos: state.todos.map(todo => ({\n          ...todo,\n          checked: todo.id === action.id ? !todo.checked : todo.checked\n        }))\n      };\n    case INSERT:\n      return state;\n    default:\n      return state;\n  }\n}\nexport default todosReducer;","map":{"version":3,"names":["REMOVE","TOGGLE","INSERT","remove","id","type","toggle","insert","text","initialState","todos","checked","todosReducer","state","action","filter","todo","map"],"sources":["/Users/gim-yeongseog/Desktop/git repository/react/todo/src/modules/todos.js"],"sourcesContent":["const REMOVE = \"todos/REMOVE\";\nconst TOGGLE = \"todos/TOGGLE\";\nconst INSERT = \"todos/INSERT\";\n\nexport const remove = (id) => ({ type: REMOVE, id });\nexport const toggle = (id) => ({ type: TOGGLE, id });\nexport const insert = (id, text) => ({ type: INSERT, id, text });\n\nconst initialState = {\n  todos: [\n    { id: 1, text: \"리액트의 기초 알아보기\", checked: false },\n    { id: 2, text: \"컴포넌트 스타일링 해보기\", checked: false },\n    { id: 3, text: \"일정 관리 앱 만들어 보기\", checked: false },\n  ],\n};\n\nfunction todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case REMOVE:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.id),\n      };\n    case TOGGLE:\n      return {\n        ...state,\n        todos: state.todos.map((todo) => ({\n          ...todo,\n          checked: todo.id === action.id ? !todo.checked : todo.checked,\n        })),\n      };\n    case INSERT:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default todosReducer;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,cAAc;AAC7B,MAAMC,MAAM,GAAG,cAAc;AAC7B,MAAMC,MAAM,GAAG,cAAc;AAE7B,OAAO,MAAMC,MAAM,GAAIC,EAAE,KAAM;EAAEC,IAAI,EAAEL,MAAM;EAAEI;AAAG,CAAC,CAAC;AACpD,OAAO,MAAME,MAAM,GAAIF,EAAE,KAAM;EAAEC,IAAI,EAAEJ,MAAM;EAAEG;AAAG,CAAC,CAAC;AACpD,OAAO,MAAMG,MAAM,GAAG,CAACH,EAAE,EAAEI,IAAI,MAAM;EAAEH,IAAI,EAAEH,MAAM;EAAEE,EAAE;EAAEI;AAAK,CAAC,CAAC;AAEhE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IAAEN,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE,cAAc;IAAEG,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEP,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE,eAAe;IAAEG,OAAO,EAAE;EAAM,CAAC,EAChD;IAAEP,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE,gBAAgB;IAAEG,OAAO,EAAE;EAAM,CAAC;AAErD,CAAC;AAED,SAASC,YAAY,GAA+B;EAAA,IAA9BC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAChD,QAAQA,MAAM,CAACT,IAAI;IACjB,KAAKL,MAAM;MACT,OAAO;QACL,GAAGa,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKU,MAAM,CAACV,EAAE;MAC3D,CAAC;IACH,KAAKH,MAAM;MACT,OAAO;QACL,GAAGY,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACO,GAAG,CAAED,IAAI,KAAM;UAChC,GAAGA,IAAI;UACPL,OAAO,EAAEK,IAAI,CAACZ,EAAE,KAAKU,MAAM,CAACV,EAAE,GAAG,CAACY,IAAI,CAACL,OAAO,GAAGK,IAAI,CAACL;QACxD,CAAC,CAAC;MACJ,CAAC;IACH,KAAKT,MAAM;MACT,OAAOW,KAAK;IACd;MACE,OAAOA,KAAK;EAAC;AAEnB;AAEA,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}